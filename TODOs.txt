Near-term TODO list (before Emu3):
* Assembler
* Make sure the Screen prints and the KeyBoard reads
* Make it run at 30 fps
* Bank Registers
? Determine if GPU has VRAM bus locked (address to read indicating if GPU has VRAM bus locked)
* Frame counter (a 1/30th sec clock)
* DMA transfers
* Properly handle word read in device space (or declare that only byte reads are valid)
* Figure out why the screen in Emu2 isn't printed right. (Printing \0 isn't printing a space.)
* Make RET RETC and add RET.

Far-term FUTURE list (maybe never):
- Add a scratchpad: use scratchpad location 0 like a register.
- Add a proper divide instruction
- LDN, MIN, MAX

Emu3
* Create a keymap so that we're not using the PixelGameEngine enum values.
* Check depth ordering